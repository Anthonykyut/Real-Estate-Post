// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @unique @default(uuid())
  email        String    @unique
  name         String?
  password     String
  profileImage String?
  posts        Post[]
  comments     Comment[]
  likes        Like[]
}

model Post {
  postId   String    @id @default(cuid())
  title    String?   @db.VarChar(255)
  content  String?   @db.VarChar(65535)
  authorId String?
  author   User?     @relation(fields: [authorId], references: [id])
  imageUrl String?
  comments Comment[]
  likes    Like[]
}

model Comment {
  commentId       String  @id @default(cuid())
  comment_content String?
  postId          String?
  post            Post?   @relation(fields: [postId], references: [postId], onDelete: Cascade)
  authorId        String?
  author          User?   @relation(fields: [authorId], references: [id])
}

model Like {
  likeId  String  @id @default(cuid())
  postId  String
  userId  String
  isLiked Boolean @default(false)
  post    Post    @relation(fields: [postId], references: [postId], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}
